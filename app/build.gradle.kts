/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

version = "1.0"
group = "top.dreamlike"



plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    kotlin("jvm") version "1.8.22"
    kotlin("plugin.serialization") version "1.8.22"
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    java
}

repositories {
    mavenLocal()
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
val vertx_version = "4.4.2"
dependencies {
    // Use the Kotlin JUnit 5 integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")

    // Use the JUnit 5 integration.
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.9.1")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:31.1-jre")
    implementation(project(":lib"))
    implementation("io.vertx:vertx-core:$vertx_version")
    implementation("io.vertx:vertx-web:$vertx_version")
    // https://mvnrepository.com/artifact/io.vertx/vertx-lang-kotlin-coroutines
    implementation("io.vertx:vertx-lang-kotlin-coroutines:$vertx_version")

// https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    implementation("com.zaxxer:HikariCP:5.0.1")
//// https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation("org.mariadb.jdbc:mariadb-java-client:3.1.0")
//     https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
//    implementation("com.mysql:mysql-connector-j:8.0.33")

// https://mvnrepository.com/artifact/org.mybatis/mybatis
    implementation("org.mybatis:mybatis:3.5.13")

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.module/jackson-module-kotlin
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.15.2")
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation("com.fasterxml.jackson.core:jackson-databind:2.15.2")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0")


//    api(project(":lib"))
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(19))
    }
}

application {
    // Define the main class for the application.
    mainClass.set("top.dreamlike.AppKt")
}


//tasks.withType<JavaCompile>().configureEach {
//    options.compilerArgs.add("--enable-preview")
//}

tasks.jar {
    manifest {
        attributes["Main-Class"] = application.mainClass
    }
    from({
        configurations.runtimeClasspath.get()
                .filter { it.name.endsWith("jar") }.map { zipTree(it) }
    })
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
